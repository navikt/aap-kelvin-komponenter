name: Build and release new version

on:
    push:
        branches:
            - main
    workflow_dispatch:

jobs:
    test:
        runs-on: ubuntu-latest
        permissions:
            packages: write
            contents: write
            actions: read
            checks: write
            id-token: write
        name: Build & Test

        steps:
            -   uses: actions/checkout@v4
                with:
                    fetch-depth: 0
            -   name: Setup JDK
                uses: actions/setup-java@v4.2.2
                with:
                    distribution: 'temurin'
                    java-version: 21
            -   name: Setup Gradle for a non-wrapper project
                uses: gradle/actions/setup-gradle@v4
                with:
                    gradle-version: 8.7

            -   name: Build and run tests
                run: gradle test --info

            -   uses: paulhatch/semantic-version@v5.4.0
                id: tag
                with:
                    bump_each_commit: true
                    tag_prefix: ""

            -   id: notes
                run: |
                    randomDelimiter=${RANDOM}
                    text="$(git --no-pager log $(git describe --tags --abbrev=0)..HEAD --pretty=format:"%h %s")"
                    echo 'CHANGELOG<<$randomDelimiter' >> $GITHUB_OUTPUT
                    echo $text >> $GITHUB_OUTPUT
                    echo '$randomDelimiter' >> $GITHUB_OUTPUT

            -   uses: actions/create-release@v1.1.4
                id: create_release
                env:
                    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
                with:
                    tag_name: ${{ steps.tag.outputs.version }}
                    release_name: ${{ steps.tag.outputs.version }}
                    body: |
                        Changes in this Release
                        ${{ steps.notes.outputs.CHANGELOG }}

            -   name: Publish
                run: gradle -Pversion=${{ steps.tag.outputs.version }} publish
                env:
                    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}